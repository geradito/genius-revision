openapi: 3.0.3
info:
  title: QuizHQ - OpenAPI 3.0
  description: |-
    This is a QuizHQ Server based on the OpenAPI 3.0 specification.
    Some useful links:
    - [The QuizHQ repository](https://github.com/geradito/genius-revision)
    - [Developer Profile](https://enrollzambia.com/geraldchinyama/)
  contact:
    email: chinyamagerald@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
  - url: http://192.168.43.203:8000/api
  - url: https://quizhq.enrollzambia.com/api
tags:
  - name: category
    description: Category Resource
  - name: grade
    description: Grade Resource
  - name: subject
    description: subject Resource
  - name: question
    description: question Resource
paths:
  /categories:
    get:
      tags:
        - category
      summary: Fetch all categories
      description: Returns all categories
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
          
  /categories/{categoryId}/grades:
    get:
      tags:
        - category
      summary: Fetch grades by category by ID
      description: Returns grades
      operationId: getGradesById
      parameters:
        - name: categoryId
          in: path
          description: ID of categoryId to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Subject'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
          
  /categories/{categoryId}/subjects:
    get:
      tags:
        - category
      summary: Fetch subjects by category by ID
      description: Returns subjects
      operationId: getCategoryById
      parameters:
        - name: categoryId
          in: path
          description: ID of categoryId to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Subject'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    
  /grades/{gradeId}/subjects:
    get:
      tags:
        - grade
      summary: Fetch Subject by grade ID
      description: Returns subjects
      operationId: gradeId
      parameters:
        - name: gradeId
          in: path
          description: ID of grade to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Subject'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    
  /subjects/{subjectId}/questions:
    get:
      tags:
        - subject
      summary: Fetch Questions by subject ID
      description: Returns subjects
      operationId: subjectId
      parameters:
        - name: subjectId
          in: path
          description: ID of subject to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Question'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found 
          
  /subjects:
    post:
      tags:
        - subject
      summary: Add subject to database
      description: Add subject to database
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                category_id:  
                  type: integer
                name:  
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Subject'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found          
  /quizzes:
    post:
      tags:
        - question
      summary: Fetch next question in quiz
      description: Returns subjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                previous_questions:          
                  type: array
                  items:
                    type: integer
                subject_id:  
                  type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Question'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found  
  /quizzes/answers:
    post:
      tags:
        - question
      summary: Fetch next question in quiz
      description: Returns subjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                previous_questions:          
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Question'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found  
  /leaderboard/save:
    post:
      tags:
        - leaderboard
      summary: save user points in leaderboard
      description: Returns success or error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_finger_print:          
                  type: string
                device_id:  
                  type: string
                android_id:          
                  type: string
                username:          
                  type: string
                points:  
                  type: integer
                level:  
                  type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'          
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found  
  /leaderboard/{categoryId}:
    get:
      tags:
        - leaderboard
      summary: Fetch leaders by category ID
      description: Returns users
      operationId: categoryId
      parameters:
        - name: categoryId
          in: path
          description: of user leaders to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/user'          
              application/xml:
                schema:
                  $ref: '#/components/schemas/user'
          '400':
            description: Invalid ID supplied
          '404':
            description: Pet not found  
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Primary School
      xml:
        name: category
  
    Subject:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Mathematics
      xml:
        name: category
 
    user:
      type: object
      properties:
        username:
          type: string
          example: musialike
        points:
          type: integer
          example: 130
        level:
          type: integer
          example: 1
      xml:
        name: user
  
    Question:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        question:
          type: string
          example: Who is the third President of Zambia?
        option1:
          type: string
          example: Kaunda
        option2:
          type: string
          example: Lungu
        option3:
          type: string
          example: Chiluba
        option4:
          type: string
          example: Mwanawasa
        answer:
          type: string
          example: Mwanawasa
      xml:
        name: question
    